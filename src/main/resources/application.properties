spring.application.name=springboot-quartz-1

eureka.client.serviceUrl.defaultZone=http://localhost:1111/eureka/

feign.httpclient.enabled=true
#
spring.thymeleaf.prefix=classpath:/static/
spring.resources.static-locations=classpath:static/,file:static/



logging.path=/mylog
logging.file=myy.log
server.context-path=/
# tomcat����߳�����Ĭ��Ϊ200
server.tomcat.max-threads=800
# tomcat��URI����
server.tomcat.uri-encoding=UTF-8
# ����������Ϣ
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url = jdbc:mysql://:3306/bin_test?characterEncoding=utf8
spring.datasource.username = 
spring.datasource.password = 
spring.datasource.driverClassName = com.mysql.jdbc.Driver


#���ӳص�������Ϣ
## ��ʼ����С����С�����
spring.druid.initialSize=50
spring.druid.minIdle=5
spring.druid.maxActive=200
## ���û�ȡ���ӵȴ���ʱ��ʱ��
spring.druid.maxWait=60000
# ���ü����òŽ���һ�μ�⣬�����Ҫ�رյĿ������ӣ���λ�Ǻ���
spring.druid.timeBetweenEvictionRunsMillis=60000
# ����һ�������ڳ�����С�����ʱ�䣬��λ�Ǻ���
spring.druid.minEvictableIdleTimeMillis=300000
spring.druid.validationQuery=SELECT 1 FROM DUAL
spring.druid.testWhileIdle=true
spring.druid.testOnBorrow=false
spring.druid.testOnReturn=false
spring.druid.poolPreparedStatements=true
spring.druid.maxPoolPreparedStatementPerConnectionSize=20
# ���ü��ͳ�����ص�filters��ȥ�����ؽ���sql�޷�ͳ�ƣ�'wall'���ڷ���ǽ
spring.druid.filters=stat,wall,log4j
# ͨ��connectProperties��������mergeSql���ܣ���SQL��¼
spring.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
##
spring.profiles.active=dev


#mybatis
mybatis.type-aliases-package=com.binbinbin.entity
mybatis.mapper-locations=classpath:mapper/*.xml
#mappers ����ӿ�ʱ���Ÿ���
#mapper.mappers=tk.mybatis.mapper.common.Mapper
mapper.mappers=com.binbinbin.util.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL

#pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql


server.maxHttpHeaderSize=10240000
server.maxHttpPostSize=10240000

server.tomcat.maxHttpHeaderSize=10240000
server.tomcat.maxHttpPostSize=10240000


#quartz集群配置
# ===========================================================================
# Configure Main Scheduler Properties 调度器属性
# ===========================================================================
#调度标识名 集群中每一个实例都必须使用相同的名称
org.quartz.scheduler.instanceName=DefaultQuartzScheduler1
#ID设置为自动获取 每一个必须不同
org.quartz.scheduler.instanceid=AUTO
#============================================================================
# Configure ThreadPool
#============================================================================
#线程池的实现类（一般使用SimpleThreadPool即可满足几乎所有用户的需求）
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
#指定线程数，至少为1（无默认值）(一般设置为1-100直接的整数合适)
org.quartz.threadPool.threadCount = 25
#设置线程的优先级（最大为java.lang.Thread.MAX_PRIORITY 10，最小为Thread.MIN_PRIORITY 1，默认为5）
org.quartz.threadPool.threadPriority = 5
#============================================================================
# Configure JobStore
#============================================================================
# 信息保存时间 默认值60秒
org.quartz.jobStore.misfireThreshold = 60000
#数据保存方式为数据库持久化
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
#数据库代理类，一般org.quartz.impl.jdbcjobstore.StdJDBCDelegate可以满足大部分数据库
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#JobDataMaps是否都为String类型
org.quartz.jobStore.useProperties = false
#数据库别名 随便取
org.quartz.jobStore.dataSource = myDS
#表的前缀，默认QRTZ_
org.quartz.jobStore.tablePrefix = QRTZ_
#是否加入集群
org.quartz.jobStore.isClustered = true
#调度实例失效的检查时间间隔
org.quartz.jobStore.clusterCheckinInterval = 20000
#============================================================================
# Configure Datasources
#============================================================================
#数据库引擎
org.quartz.dataSource.myDS.driver = com.mysql.jdbc.Driver
#数据库连接
org.quartz.dataSource.myDS.URL = jdbc:mysql://:3306/quartz?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true
#数据库用户
org.quartz.dataSource.myDS.user = 
#数据库密码
org.quartz.dataSource.myDS.password = 
#允许最大连接
org.quartz.dataSource.myDS.maxConnections = 5
#验证查询sql,可以不设置
org.quartz.dataSource.myDS.validationQuery=select 0 from dual

#自定义连接池
#org.quartz.dataSource.myDS.connectionProvider.class=com.poly.pay.schedule.DruidConnectionProvider
#允许最大连接
#org.quartz.dataSource.myDS.maxConnection = 20
#验证查询sql,可以不设置
#org.quartz.dataSource.myDS.validationQuery=select 0 from dual
